# Generated by Django 4.2.5 on 2023-10-06 08:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import school.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Додайте до назви слово клас, щоб користувачу було більш зрозуміло.', max_length=50, unique=True, verbose_name='Назва класу')),
                ('is_active', models.BooleanField(default=True, verbose_name='Виводити')),
                ('sort_order', models.IntegerField(blank=True, help_text='Якщо поле залишиться пустим, то після збереженні елемент буде виводитися останнім.', null=True, verbose_name='Порядок виводу')),
                ('slug', models.SlugField(editable=False, help_text='заповнюється автоматично', unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Клас',
                'verbose_name_plural': 'Довідник 1: Класи',
            },
        ),
        migrations.CreateModel(
            name='GradeSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, editable=False, help_text='заповнюється автоматично', max_length=150, unique=True, verbose_name='Клас-Предмет (курс)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.grade', verbose_name='Клас')),
            ],
            options={
                'verbose_name': 'Курс (Клас-Предмет)',
                'verbose_name_plural': 'Довідник 3: Курси (Клас-Предмет)',
            },
        ),
        migrations.CreateModel(
            name='GradeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Тип школи')),
                ('is_active', models.BooleanField(default=True, verbose_name='Виводити')),
                ('sort_order', models.IntegerField(blank=True, help_text='Якщо поле залишиться пустим, то після збереженні елемент буде виводитися останнім.', null=True, verbose_name='Порядок виводу')),
            ],
            options={
                'verbose_name': 'Тип школи',
                'verbose_name_plural': 'Додатковий довідник: Типи школи',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Назва рівня')),
                ('description', models.TextField(blank=True, max_length=200, verbose_name='Опис рівня')),
                ('sort_order', models.IntegerField(blank=True, help_text='Якщо поле залишиться пустим, то після збереженні елемент буде виводитися останнім.', null=True, verbose_name='Порядок виводу')),
                ('is_active', models.BooleanField(default=True, verbose_name='Виводити')),
            ],
            options={
                'verbose_name': 'Рівень знань учня',
                'verbose_name_plural': 'Додатковий довідник: Рівні знань учнів',
            },
        ),
        migrations.CreateModel(
            name='Science',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Назва наукової дисципліни')),
                ('is_active', models.BooleanField(default=True, verbose_name='Виводити')),
                ('sort_order', models.IntegerField(blank=True, help_text='Якщо поле залишиться пустим, то після збереженні елемент буде виводитися останнім.', null=True, verbose_name='Порядок виводу')),
                ('slug', models.SlugField(editable=False, help_text='заповнюється автоматично', max_length=100, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Наукова дисципліна',
                'verbose_name_plural': 'Додатковий довідник: Наукові дисципліни',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Назва предмету')),
                ('is_active', models.BooleanField(default=True, verbose_name='Виводити')),
                ('sort_order', models.IntegerField(blank=True, help_text='Якщо поле залишиться пустим, то після збереженні елемент буде виводитися останнім.', null=True, verbose_name='Порядок виводу')),
                ('slug', models.SlugField(editable=False, help_text='заповнюється автоматично', max_length=100, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Довідник 2: Предмети',
            },
        ),
        migrations.CreateModel(
            name='TextBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Назва книги')),
                ('description', models.TextField(blank=True, max_length=2000, verbose_name='Опис книги')),
                ('is_active', models.BooleanField(default=True, verbose_name='Виводити')),
                ('slug', models.SlugField(editable=False, help_text='заповнюється автоматично', max_length=255, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Підручник',
                'verbose_name_plural': 'Довідник: Підручники',
            },
        ),
        migrations.CreateModel(
            name='TextBookAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Автор підручника')),
                ('is_active', models.BooleanField(default=True, verbose_name='Виводити')),
                ('slug', models.SlugField(editable=False, help_text='заповнюється автоматично', max_length=255, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Автор підручника',
                'verbose_name_plural': 'Довідник: Автори підручників',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Назва теми')),
                ('description', models.TextField(blank=True, max_length=2000, verbose_name='Опис теми')),
                ('is_active', models.BooleanField(default=True, verbose_name='Виводити')),
                ('sort_order', models.IntegerField(blank=True, help_text='Якщо поле залишиться пустим, то після збереженні елемент буде виводитися останнім.', null=True, verbose_name='Порядок виводу')),
                ('slug', models.SlugField(editable=False, help_text='заповнюється автоматично', max_length=255, unique=True, verbose_name='slug')),
                ('science', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.science', verbose_name='Наукова дисципліна')),
            ],
            options={
                'verbose_name': 'Тема',
                'verbose_name_plural': '2. Теми',
            },
        ),
        migrations.CreateModel(
            name='VideoAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Назва каналу, автора')),
                ('is_active', models.BooleanField(default=True, verbose_name='Виводити')),
                ('slug', models.SlugField(editable=False, help_text='заповнюється автоматично', max_length=255, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Назва каналу, автора',
                'verbose_name_plural': 'Довідник: Канали, автори відео',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Назва відео')),
                ('description', models.TextField(blank=True, max_length=2000, verbose_name='Опис відео')),
                ('link', models.URLField(max_length=255, unique=True, validators=[django.core.validators.URLValidator(), school.models.validate_https_url], verbose_name='Посилання на відео')),
                ('rating', models.DecimalField(decimal_places=2, default=10, help_text='Вкажіть оцінку від 0 до 12', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='Оцінка відео')),
                ('is_active', models.BooleanField(default=True, verbose_name='Виводити')),
                ('slug', models.SlugField(editable=False, help_text='заповнюється автоматично', max_length=255, unique=True, verbose_name='slug')),
                ('course', models.ForeignKey(blank=True, help_text='Заповніть це поле, якщо відео передбачено тільки для певного класу та предмету. Якщо відео можна використати для повторення в іншому класі, то вказувати Клас-Предмет не потрібно.', on_delete=django.db.models.deletion.PROTECT, to='school.gradesubject', verbose_name='Клас-Предмет')),
                ('level', models.ForeignKey(help_text='Рівень знань учня, на який розраховано відео', on_delete=django.db.models.deletion.PROTECT, to='school.level', verbose_name='Рівень')),
                ('science', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.science', verbose_name='Наукова дисципліна')),
                ('text_book', models.ForeignKey(blank=True, help_text='Заповніть це поле, якщо в відео згадується певний підручник.', on_delete=django.db.models.deletion.PROTECT, to='school.textbook', verbose_name='Підручник')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.topic', verbose_name='Тема')),
                ('video_author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.videoauthor', verbose_name='Канал, автор відео')),
            ],
            options={
                'verbose_name': 'Навчальне відео',
                'verbose_name_plural': '4. Відеотека',
            },
        ),
        migrations.AddField(
            model_name='textbook',
            name='book_author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.textbookauthor', verbose_name='Автори підручника'),
        ),
        migrations.AddField(
            model_name='textbook',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.gradesubject', verbose_name='Курс (Клас-Предмет)'),
        ),
        migrations.AddField(
            model_name='gradesubject',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.subject', verbose_name='Предмет'),
        ),
        migrations.AddField(
            model_name='grade',
            name='grade_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.gradetype', verbose_name='Тип школи'),
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Назва розділу')),
                ('description', models.TextField(blank=True, max_length=2000, verbose_name='Опис розділу')),
                ('is_active', models.BooleanField(default=True, verbose_name='Виводити')),
                ('sort_order', models.IntegerField(blank=True, help_text='Якщо поле залишиться пустим, то після збереженні елемент буде виводитися останнім.', null=True, verbose_name='Порядок виводу')),
                ('slug', models.SlugField(editable=False, help_text='заповнюється автоматично', max_length=255, unique=True, verbose_name='slug')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.gradesubject', verbose_name='Курс (Клас-Предмет)')),
                ('science', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.science', verbose_name='Наукова дисципліна')),
            ],
            options={
                'verbose_name': 'Розділ',
                'verbose_name_plural': '1. Розділи',
            },
        ),
        migrations.AlterUniqueTogether(
            name='gradesubject',
            unique_together={('grade', 'subject')},
        ),
        migrations.CreateModel(
            name='ChapterTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, editable=False, help_text='заповнюється автоматично', max_length=150, unique=True, verbose_name='Розділ-Тема')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.chapter', verbose_name='Розділ')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.topic', verbose_name='Тема')),
            ],
            options={
                'verbose_name': 'Розділ-Тема',
                'verbose_name_plural': '3. Розділ-Тема',
                'unique_together': {('chapter', 'topic')},
            },
        ),
    ]
